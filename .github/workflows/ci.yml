name: CI

on:
  push:
    branches: [main]
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository }}

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pytest flake8
      - name: Lint backend
        run: flake8 backend/app
      - name: Run backend tests
        run: pytest backend/tests
      - name: Build backend image
        run: |
          docker build -t $REGISTRY/${{ env.IMAGE_PREFIX }}/backend:latest backend
      - name: Push backend image
        if: github.event_name == 'push'
        env:
          GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo $GHCR_TOKEN | docker login $REGISTRY -u ${{ github.actor }} --password-stdin
          docker push $REGISTRY/${{ env.IMAGE_PREFIX }}/backend:latest

  worker:
    needs: backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build worker image
        run: |
          docker build \
            --build-arg BACKEND_IMAGE=$REGISTRY/${{ env.IMAGE_PREFIX }}/backend:latest \
            -t $REGISTRY/${{ env.IMAGE_PREFIX }}/worker:latest \
            -f worker/Dockerfile .
      - name: Push worker image
        if: github.event_name == 'push'
        env:
          GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo $GHCR_TOKEN | docker login $REGISTRY -u ${{ github.actor }} --password-stdin
          docker push $REGISTRY/${{ env.IMAGE_PREFIX }}/worker:latest

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Install dependencies
        working-directory: frontend
        run: npm install
      - name: Run build
        working-directory: frontend
        run: npm run build
      - name: Build frontend image
        run: |
          docker build -t $REGISTRY/${{ env.IMAGE_PREFIX }}/frontend:latest frontend
      - name: Push frontend image
        if: github.event_name == 'push'
        env:
          GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo $GHCR_TOKEN | docker login $REGISTRY -u ${{ github.actor }} --password-stdin
          docker push $REGISTRY/${{ env.IMAGE_PREFIX }}/frontend:latest
